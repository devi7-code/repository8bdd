<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.uniqlo</groupId>
  <artifactId>Assignment2</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>Assignment2</name>
  <url>http://maven.apache.org</url>

  <properties>
		<cucumber.version>5.7.0</cucumber.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<aspectj.version>1.8.10</aspectj.version>
	</properties>

    

	<dependencies>
	
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>3.141.59</version>
		</dependency>
<dependency>
    <groupId>org.seleniumhq.selenium</groupId>
    <artifactId>selenium-server</artifactId>
    <version>3.141.59</version>
</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-picocontainer</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
    <groupId>io.qameta.allure</groupId>
    <artifactId>allure-junit4</artifactId>
    <version>2.13.3</version>
    
</dependency>
	<dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-api</artifactId>
    <version>2.13.3</version>
  </dependency>
  <dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-core</artifactId>
    <version>2.16.0</version>
  </dependency>	


	</dependencies>

	<build>
		<plugins>
<plugin>
    <groupId>io.qameta.allure</groupId>
    <artifactId>allure-maven</artifactId>
    <version>2.8</version>
    <configuration>
        <reportVersion>2.3.1</reportVersion>
    </configuration>
</plugin>
			 <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.20.1</version>
                <configuration>
                    <argLine>
                        -javaagent:"${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar"
                    </argLine>
                    <properties>
                        <property>
                            <name>listener</name>
                            <value>io.qameta.allure.junit4.AllureJunit4</value>
                        </property>
                    </properties>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjweaver</artifactId>
                        <version>${aspectj.version}</version>
                    </dependency>
                </dependencies>
</plugin>
			<plugin>
				<groupId>net.masterthought</groupId>
				<artifactId>maven-cucumber-reporting</artifactId>
				<version>4.11.2</version>
				<executions>
					<execution>
						<id>execution</id>
						<phase>verify</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<projectName>cucumber-jvm-example</projectName>
							<!-- optional, per documentation set this to "true" to bypass generation 
								of Cucumber Reports entirely, defaults to false if not specified -->
							<skip>false</skip>
							<!-- output directory for the generated report -->
							<outputDirectory>${project.build.directory}</outputDirectory>
							<!-- optional, defaults to outputDirectory if not specified -->
							<inputDirectory>${project.build.directory}</inputDirectory>
							<jsonFiles>
								<!-- supports wildcard or name pattern -->
								<param>**/*.json</param>
							</jsonFiles>
							<!-- optional, defaults to outputDirectory if not specified -->
							<classificationDirectory>${project.build.directory}</classificationDirectory>
							<classificationFiles>
								<!-- supports wildcard or name pattern -->
								<param>sample.properties</param>
								<param>other.properties</param>
							</classificationFiles>
							<parallelTesting>false</parallelTesting>
							<!-- optional, set true to fail build on test failures -->
							<checkBuildResult>false</checkBuildResult>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
